// <auto-generated />
using System;
using FitfokusServer.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitfokusServer.Migrations
{
    [DbContext(typeof(FitFokusDB))]
    partial class FitFokusDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitfokusServer.Models.DomainObjects.Responses.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CurrentCheast")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentHip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentNeck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StartingCheast")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StartingHip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StartingNeck")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("StartingWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("FitfokusServer.Models.DomainObjects.Responses.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitfokusServer.Models.MessageBoard.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FitfokusServer.Models.MessageBoard.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("FitfokusServer.Models.DomainObjects.Responses.Result", b =>
                {
                    b.HasOne("FitfokusServer.Models.DomainObjects.Responses.User", "User")
                        .WithMany("Results")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitfokusServer.Models.MessageBoard.Message", b =>
                {
                    b.HasOne("FitfokusServer.Models.MessageBoard.Topic", "Topic")
                        .WithMany("Messages")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitfokusServer.Models.DomainObjects.Responses.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitfokusServer.Models.MessageBoard.Topic", b =>
                {
                    b.HasOne("FitfokusServer.Models.DomainObjects.Responses.User", "User")
                        .WithMany("Topics")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitfokusServer.Models.DomainObjects.Responses.User", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Results");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("FitfokusServer.Models.MessageBoard.Topic", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
